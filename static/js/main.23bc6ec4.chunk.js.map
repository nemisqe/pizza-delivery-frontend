{"version":3,"sources":["actions/user-actions.js","components/app-header/app-header.js","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","actions/pizza-menu-actions.js","components/pizza-delivery-service-context/pds-context.js","components/hoc/with-pizza-delivery-service.js","utils/index.js","components/spinner/spinner.js","components/error-indicator/error-indicator.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/cart-table/cart-table.js","components/pages/home-page.js","components/history-list/history-page-list-item.js","components/spinner/index.js","components/history-list/history-list.js","components/pages/history-page.js","components/sign-in-error/index.js","components/sign-in-error/sign-in-error.js","components/pages/login-page.js","components/registration-success/index.js","components/registration-success/registration-success.js","components/pages/registration-page.js","components/app-footer/index.js","components/app-footer/app-footer.js","components/app/index.js","components/app/app.js","reducers/menu-reducer.js","reducers/cart-reducer.js","reducers/user-reducer.js","reducers/index.js","store.js","components/error-indicator/index.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","index.js","services/pizza-delivery-service.js"],"names":["userError","error","type","payload","fetchLoginUserData","pizzaService","clientName","password","dispatch","loginUser","then","res","args","correctLogin","data","token","catch","err","fetchRegistrationUserData","registerUser","fetchMakeOrderData","isReady","cooking_time","makeOrder","e","makeOrderSuccess","console","fetchUserOrderHistory","getUserOrderHistory","LogoutLink","userLogout","className","onClick","key","to","LoginRegistrationLink","window","localStorage","getItem","Fragment","HistoryLink","WelcomeTitle","AppHeader","state","activeBurgerButton","toggleBurgerButton","setState","checkAuth","this","props","log","isAuthenticated","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","PropTypes","func","isRequired","bool","string","Component","mapDispatchToProps","connect","UserReducer","MenuListItem","pizza","onAddedToCart","pizza_name","pizza_pictures","src","alt","width","height","fetchMenu","getAllPizzas","menuError","pizzaAddedToCart","pizzaId","pizzaRemovedFromCart","allPizzasRemovedFromCart","React","createContext","PizzaServiceProvider","Provider","PizzaServiceConsumer","Consumer","withPizzaDeliveryService","Wrapped","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","MenuList","pizzaMenu","map","MenuListContainer","loading","menuErrors","length","array","any","MenuReducer","bindActionCreators","CartTable","renderRow","item","idx","name","count","totalCookingTime","onIncrease","onDecrease","onDelete","handleSubmit","preventDefault","orderTotal","dialog","show","title","body","bsSize","actions","Dialog","OKAction","setTimeout","alert","setOptions","defaultOkLabel","items","ref","component","CartReducer","cartItems","HistoryPageLinkItem","historyData","HistoryList","currentUserOrderHistory","orderId","HistoryPage","SignInError","errorHeader","errorBody","hide","role","LoginPage","signinErrors","fetchUserData","handlePassword","target","value","handleUsername","exact","onChange","htmlFor","required","RegistrationSuccess","RegistrationPage","signupErrors","signUpSuccess","AppFooter","href","App","path","render","HomePage","initialState","action","currentOrder","updateCartItems","slice","updateTotalCookingTime","quantity","updateOrder","find","itemIndex","findIndex","newItem","updateCartItem","lsName","userData","setItem","removeItem","combineReducers","store","createStore","reducer","applyMiddleware","thunkMiddleware","ErrorBoundry","hasError","children","_basicUrl","a","axios","get","username","post","response","status","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.23bc6ec4.chunk.js","sourcesContent":["const correctLogin = (...args) => ({\r\n    type: 'POST_LOGIN_SUCCESS',\r\n    payload: args\r\n});\r\n\r\nconst loginDataRequested = () => ({\r\n    type: 'FETCH_LOGIN_DATA'\r\n});\r\n\r\nconst userError = (error) => ({\r\n    type: 'FETCH_USER_DATA_FAILURE',\r\n    payload: error\r\n});\r\n\r\nconst userLogout = () => ({\r\n    type: 'USER_LOGOUT'\r\n});\r\n\r\nconst registrationSuccess = (newUser) => ({\r\n    type: 'USER_REGISTRATION_SUCCESS',\r\n    payload: newUser\r\n});\r\n\r\nexport const checkAuth = () => ({\r\n    type: 'CHECK_USER_FOR_AUTH'\r\n});\r\n\r\nconst makeOrderSuccess = (...args) => ({\r\n    type: 'MAKE_ORDER_SUCCESS',\r\n    payload: args\r\n});\r\n\r\nconst userHistoryRequested = () => ({\r\n    type: 'USER_HISTORY_REQUESTED'\r\n});\r\n\r\nconst getUserHistory = (userOrderHistory) => ({\r\n    type: 'GET_USER_ORDER_HISTORY',\r\n    payload: userOrderHistory\r\n});\r\n\r\nconst dataExistErr = (err) => ({\r\n    type: '409_STATUS_CODE',\r\n    payload: err\r\n});\r\n\r\nconst fetchLoginUserData = (pizzaService) => (clientName, password) => dispatch => {\r\n    loginDataRequested();\r\n    pizzaService.loginUser(clientName, password)\r\n        .then(res => {\r\n            if (res === 404) dispatch(userError(res));\r\n            dispatch(correctLogin(res.data[0].clientName, res.data[0].password, res.data[0].token))\r\n        })\r\n        .catch(err => {\r\n            dispatch(userError(err))\r\n        });\r\n};\r\n\r\nconst fetchRegistrationUserData = (pizzaService) => (clientName, password) => dispatch => {\r\n    pizzaService.registerUser(clientName, password)\r\n        .then(res => {\r\n            if (res === 409) {\r\n                dispatch(dataExistErr(res));\r\n            }\r\n            dispatch(registrationSuccess(res))\r\n        })\r\n        .catch(err => {\r\n            dispatch(userError(err))\r\n        });\r\n};\r\n\r\nconst fetchMakeOrderData = (pizzaService) => (clientName, isReady, cooking_time) => dispatch => {\r\n    pizzaService.makeOrder(clientName, isReady, cooking_time)\r\n        .then(e => {\r\n            dispatch(makeOrderSuccess(e))\r\n        })\r\n        .catch(error => console.error(error));\r\n};\r\n\r\nconst fetchUserOrderHistory = (pizzaService) => clientName => dispatch => {\r\n    dispatch(userHistoryRequested());\r\n    pizzaService.getUserOrderHistory(clientName)\r\n        .then(e => dispatch(getUserHistory(e)))\r\n        .catch(error => console.error(error))\r\n};\r\n\r\nexport {\r\n    fetchLoginUserData,\r\n    fetchRegistrationUserData,\r\n    fetchMakeOrderData,\r\n    fetchUserOrderHistory,\r\n    userLogout\r\n};\r\n","import React, { Component } from 'react';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport { userLogout, checkAuth } from \"../../actions/user-actions\";\r\nimport './app-header.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst LogoutLink = ({ userLogout }) => {\r\n    return(\r\n        <li\r\n            className=\"nav-item\"\r\n            onClick={() => userLogout()}\r\n            key='logout-link'>\r\n            <Link\r\n                className=\"nav-link\"\r\n                to='/logout'>\r\n                Log out\r\n            </Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nLogoutLink.propTypes = {\r\n    userLogout: PropTypes.func\r\n};\r\n\r\nconst LoginRegistrationLink = () => {\r\n    if (window.localStorage.getItem('token')) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <li className=\"nav-item\" key='registration-link'>\r\n                <Link className=\"nav-link\" to='/registration'>Registration</Link>\r\n            </li>\r\n            <li className=\"nav-item\" key='login-link'>\r\n                <Link className=\"nav-link\" to='/login'>Login</Link>\r\n            </li>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst HistoryLink = () => {\r\n\r\n    if (!window.localStorage.getItem('token')) {\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <li className=\"nav-item \" key='cart-link'>\r\n            <Link className=\"nav-link\" to='/history'>History</Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nconst WelcomeTitle = ({ clientName }) => {\r\n\r\n    return(\r\n        <li className=\"nav-item welcome-title\" key='cart-link'>\r\n            <span className=\"badge badge-primary\">Welcome back, { clientName }!</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nWelcomeTitle.propTypes = {\r\n    clientName: PropTypes.string\r\n};\r\n\r\nclass AppHeader extends Component {\r\n\r\n    state = {\r\n        activeBurgerButton: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { checkAuth } = this.props;\r\n        checkAuth();\r\n    }\r\n\r\n    toggleBurgerButton = () => {\r\n        this.setState({activeBurgerButton: !this.state.activeBurgerButton})\r\n    };\r\n\r\n    render() {\r\n        console.log(localStorage);\r\n        const { isAuthenticated, userLogout, clientName } = this.props;\r\n        return (\r\n            <React.Fragment>\r\n            <nav className=\"app-header navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Pizza-Delivery</Link>\r\n                { isAuthenticated ? <span className=\"welcome-title__mobile badge badge-primary\">Welcome back, { clientName }!</span> : null }\r\n                { isAuthenticated ? <WelcomeTitle clientName={clientName}/> : null }\r\n                <button\r\n                    onClick={this.toggleBurgerButton}\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNav\"\r\n                        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className={`navbar-collapse ${this.state.activeBurgerButton ? 'collapse' : ''}`} id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav header-navigation-links\">\r\n                        <li className=\"nav-item\" key=\"main-link\">\r\n                            <Link className=\"nav-link\" to='/'>Home</Link>\r\n                        </li>\r\n                        { isAuthenticated ? <HistoryLink/> : null }\r\n                        { isAuthenticated ? <LogoutLink userLogout={userLogout}/> : <LoginRegistrationLink/> }\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    static get propTypes() {\r\n        return {\r\n            checkAuth: PropTypes.func.isRequired,\r\n            userLogout: PropTypes.func.isRequired,\r\n            isAuthenticated: PropTypes.bool,\r\n            clientName: PropTypes.string\r\n        };\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ UserReducer: {isAuthenticated, clientName} }) => {\r\n    return { isAuthenticated, clientName };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    userLogout,\r\n    checkAuth\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);\r\n","import MenuListItem from './menu-list-item';\r\n\r\nexport default MenuListItem;","import React from 'react';\r\nimport './menu-list-item.css';\r\n\r\nconst MenuListItem = ({ pizza, onAddedToCart }) => {\r\n\r\n    const { pizza_name, cooking_time, pizza_pictures } = pizza;\r\n\r\n    return(\r\n        <div className=\"pizza-list-item\">\r\n            <div className=\"pizza-cover\">\r\n                <img src={`http://localhost:3001/pizza-pictures/${pizza_pictures}`} alt=\"pizza-cover\" width=\"120\" height=\"120\"/>\r\n            </div>\r\n            <div className=\"pizza-details\">\r\n                <p className=\"pizza-name\">{ pizza_name }</p>\r\n                <div className=\"pizza-cooking-time\">{ cooking_time } seconds</div>\r\n                <button\r\n                    onClick={() => {\r\n                        onAddedToCart()\r\n                    }}\r\n                    className=\"btn btn-info add-to-cart\">Add to cart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MenuListItem;","const pizzaMenuLoaded = (newPizzaMenu) => {\r\n    return {\r\n        type: 'FETCH_MENU_SUCCESS',\r\n        payload: newPizzaMenu\r\n    };\r\n};\r\n\r\nconst menuRequested = () => {\r\n    return {\r\n        type: 'FETCH_MENU_REQUEST'\r\n    };\r\n};\r\n\r\nconst menuError = (error) => {\r\n    return {\r\n        type: 'FETCH_MENU_FAILURE',\r\n        payload: error\r\n    }\r\n};\r\n\r\nconst fetchMenu = (pizzaService) => () => (dispatch) => {\r\n    dispatch(menuRequested());\r\n    pizzaService.getAllPizzas()\r\n        .then(data => dispatch(pizzaMenuLoaded(data)))\r\n        .catch(error => dispatch(menuError(error)));\r\n};\r\n\r\nexport const pizzaAddedToCart = (pizzaId) => {\r\n    return {\r\n        type: 'PIZZA_ADDED_TO_CART',\r\n        payload: pizzaId\r\n    };\r\n};\r\n\r\nexport const pizzaRemovedFromCart = (pizzaId) => {\r\n    return {\r\n        type: 'PIZZA_REMOVED_FROM_CART',\r\n        payload: pizzaId\r\n    }\r\n};\r\n\r\nexport const allPizzasRemovedFromCart = (pizzaId) => {\r\n    return {\r\n        type: 'ALL_PIZZAS_REMOVED_FROM_CART',\r\n        payload: pizzaId\r\n    };\r\n};\r\n\r\nexport {\r\n    fetchMenu\r\n};","import React from 'react';\r\n\r\nconst {\r\n    Provider: PizzaServiceProvider,\r\n    Consumer: PizzaServiceConsumer\r\n} = React.createContext();\r\n\r\nexport {\r\n    PizzaServiceConsumer,\r\n    PizzaServiceProvider\r\n};","import React from 'react';\r\nimport {PizzaServiceConsumer} from '../pizza-delivery-service-context/';\r\n\r\nconst withPizzaDeliveryService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return(\r\n            <PizzaServiceConsumer>\r\n                {\r\n                    (pizzaService) => {\r\n                        return <Wrapped {...props} pizzaService={pizzaService}/>;\r\n                    }\r\n                }\r\n            </PizzaServiceConsumer>\r\n        );\r\n    };\r\n};\r\n\r\nexport default withPizzaDeliveryService;","const compose = (...funcs) => (comp) => {\r\n    return funcs.reduceRight(\r\n        (wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;","import React from 'react';\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"lds-css\">\r\n            <div className=\"lds-rolling\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport './error-indicator.css';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"container centered\">\r\n            <span className=\"error-text\">\r\n                Oops. Page not found :(\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport MenuListItem from '../menu-list-item';\r\nimport './menu-list.css';\r\nimport { connect } from 'react-redux';\r\nimport {fetchMenu, pizzaAddedToCart} from \"../../actions/pizza-menu-actions\";\r\nimport withPizzaDeliveryService from '../hoc/with-pizza-delivery-service';\r\nimport compose from '../../utils';\r\nimport Spinner from \"../spinner/spinner\";\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst MenuList = ({ pizzaMenu, onAddedToCart }) => {\r\n    return(\r\n        <ul className=\"pizza-list\">\r\n            {\r\n                pizzaMenu.map(pizza => {\r\n                    return(\r\n                        <li key={pizza.id}><MenuListItem\r\n                            onAddedToCart={() => onAddedToCart(pizza.id)}\r\n                            pizza={pizza} /></li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nMenuList.propTypes = {\r\n    pizzaMenu: PropTypes.array.isRequired,\r\n    onAddedToCart: PropTypes.func\r\n};\r\n\r\nclass MenuListContainer extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchMenu();\r\n    }\r\n\r\n    render() {\r\n        const { pizzaMenu, loading, menuErrors, onAddedToCart } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>;\r\n        }\r\n\r\n        if (menuErrors.length !== 0) {\r\n            return <ErrorIndicator/>;\r\n        }\r\n\r\n        return <MenuList pizzaMenu={pizzaMenu} onAddedToCart={onAddedToCart}/>\r\n\r\n    }\r\n\r\n    static get propTypes() {\r\n        return {\r\n            pizzaMenu: PropTypes.array,\r\n            loading: PropTypes.any,\r\n            userError: PropTypes.array,\r\n            onAddedToCart: PropTypes.func,\r\n            fetchMenu: PropTypes.func,\r\n            menuErrors: PropTypes.array\r\n        };\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ MenuReducer: { pizzaMenu, loading, menuErrors }}) => {\r\n    return { pizzaMenu, loading, menuErrors };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { pizzaService }) => {\r\n    return bindActionCreators({\r\n        fetchMenu: fetchMenu(pizzaService),\r\n        onAddedToCart: pizzaAddedToCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withPizzaDeliveryService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(MenuListContainer);\r\n","import MenuList from './menu-list';\r\n\r\nexport default MenuList;","import React, { Component } from 'react';\r\nimport './cart-table.css';\r\nimport { connect } from 'react-redux';\r\nimport { pizzaAddedToCart, pizzaRemovedFromCart, allPizzasRemovedFromCart } from \"../../actions/pizza-menu-actions\";\r\nimport {fetchMakeOrderData} from \"../../actions/user-actions\";\r\nimport withPizzaDeliveryService from \"../hoc/with-pizza-delivery-service\";\r\nimport compose from \"../../utils\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\nimport {bindActionCreators} from \"redux\";\r\n\r\nclass CartTable extends Component {\r\n\r\n    renderRow = (item, idx) => {\r\n        const { id, name, count, totalCookingTime } = item;\r\n        const { onIncrease, onDecrease, onDelete } = this.props;\r\n            return(\r\n                <tr key={id}>\r\n                    <td>{idx + 1}</td>\r\n                    <td>{name}</td>\r\n                    <td>{count}</td>\r\n                    <td>{totalCookingTime}</td>\r\n                    <td>\r\n                        <button\r\n                            onClick={() => onDelete(id)}\r\n                            className=\"btn btn-outline-danger btn-sm float-right\">\r\n                            <i className=\"fa fa-trash-o\" />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => onIncrease(id)}\r\n                            className=\"btn btn-outline-success btn-sm float-right\">\r\n                            <i className=\"fa fa-plus-circle\" />\r\n                        </button>\r\n                        <button\r\n                            onClick={() => onDecrease(id)}\r\n                            className=\"btn btn-outline-warning btn-sm float-right\">\r\n                            <i className=\"fa fa-minus-circle\" />\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n        );\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { fetchMakeOrderData, clientName, orderTotal } = this.props;\r\n\r\n        if (orderTotal === 0) {\r\n\r\n            return this.dialog.show({\r\n                title: 'Empty cart',\r\n                body: 'Your cart is empty. Please add some pizza',\r\n                bsSize: 'large',\r\n                actions: [\r\n                    Dialog.OKAction()\r\n                ]\r\n            })\r\n        }\r\n\r\n        this.dialog.show({\r\n            title: 'Success',\r\n            body: 'Your order is currently cooking',\r\n            actions: [\r\n                Dialog.OKAction()\r\n            ]\r\n        });\r\n        fetchMakeOrderData(clientName, 'currently cooking', orderTotal);\r\n\r\n        setTimeout(() => {\r\n            alert('Your order is ready!');\r\n        }, orderTotal * 1000);\r\n    };\r\n\r\n    render() {\r\n        Dialog.setOptions({\r\n            defaultOkLabel: 'Go to page'\r\n        });\r\n\r\n        const { items } = this.props;\r\n        return (\r\n            <div className=\"shopping-cart-table\">\r\n                <h2>Your Order</h2>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Pizza</th>\r\n                        <th>Count</th>\r\n                        <th>Cooking time</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {\r\n                        items.map(this.renderRow)\r\n                    }\r\n                    </tbody>\r\n                </table>\r\n\r\n                <div className=\"total\">\r\n                    <button className=\"btn btn-primary btn-sm order-button\" onClick={this.handleSubmit}>Make order</button>\r\n                    <span className=\"total-cooking-time__title\">Total waiting time: {this.props.orderTotal} sec</span>\r\n                </div>\r\n                <Dialog ref={(component) => { this.dialog = component }} />\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = ({ CartReducer: {cartItems, orderTotal}, UserReducer: { clientName } }) => {\r\n    return {\r\n        items: cartItems,\r\n        clientName,\r\n        orderTotal,\r\n        totalCookingTime: orderTotal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { pizzaService }) => {\r\n    return bindActionCreators ({\r\n        fetchMakeOrderData: fetchMakeOrderData(pizzaService),\r\n        onIncrease: pizzaAddedToCart,\r\n        onDecrease: pizzaRemovedFromCart,\r\n        onDelete: allPizzasRemovedFromCart\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withPizzaDeliveryService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(CartTable);\r\n","import React from 'react';\r\nimport MenuList from '../menu-list/index';\r\nimport CartTable from \"../cart-table/cart-table\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst HomePage = ({isAuthenticated}) => {\r\n\r\n    if (!isAuthenticated) {\r\n        return <Redirect to='/login'/>;\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row justify-content-center alert-success alert\">\r\n                You are logged in. Add some pizza to your cart\r\n            </div>\r\n            <MenuList />\r\n            <CartTable />\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({ UserReducer: {isAuthenticated} }) => {\r\n    return { isAuthenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","import React from 'react';\r\nimport './history-page-list-item.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst HistoryPageLinkItem = ({ historyData }) => {\r\n    const { clientName, cooking_time, isReady } = historyData;\r\n    return(\r\n        <div>\r\n            <span className=\"badge badge-light item-title\">Client: <span className=\"badge badge-success item-value\">{ `${clientName} ` }</span></span>\r\n            <span className=\"badge badge-light item-title\">Cooking time: <span className=\"badge badge-success item-value\">{ `${cooking_time} ` }</span></span>\r\n            <span className=\"badge badge-light item-title\">Order progress: <span className=\"badge badge-success item-value\">{ `${isReady} ` }</span></span>\r\n        </div>\r\n    );\r\n};\r\n\r\nHistoryPageLinkItem.propTypes = {\r\n    historyData: PropTypes.object\r\n};\r\n\r\nexport default HistoryPageLinkItem;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport compose from \"../../utils\";\r\nimport withPizzaDeliveryService from \"../hoc/with-pizza-delivery-service\";\r\nimport { fetchUserOrderHistory } from \"../../actions/user-actions\";\r\nimport { connect } from 'react-redux';\r\nimport HistoryPageListItem from '../history-list/history-page-list-item';\r\nimport Spinner from \"../spinner\";\r\nimport PropTypes from 'prop-types';\r\nimport {bindActionCreators} from \"redux\";\r\nimport './history-list.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass HistoryList extends Component {\r\n\r\n    componentDidMount() {\r\n        const { fetchUserOrderHistory, clientName } = this.props;\r\n        fetchUserOrderHistory(clientName);\r\n    }\r\n\r\n    render() {\r\n        const { currentUserOrderHistory, loading } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner/>\r\n        }\r\n\r\n        if (currentUserOrderHistory.length === 0) {\r\n            return(\r\n                <div className=\"container-fluid mt-1 pt-1 pt-md-0 mt-md-1\">\r\n                    <div className='row'>\r\n                        <div className=\"col-md-3 diagonal \">\r\n                            <div className=\"card border-0 mt-md-5 pt-md-5 bg-transparent\">\r\n                                <div className=\"card-body bg-transparent text-center\">\r\n                                    <h4 className=\"card-title text-dark\">Your history is empty</h4>\r\n                                    <p className=\"card-text text-secondary\">Order some pizza</p>\r\n                                    <div className='text-center'><Link to=\"/\" className=\"btn btn-danger text-white\">Go to main page</Link></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-9  diagonal diagonal-image\">\r\n                            {/*<div className=\"diagonal-text text-white p-md-4\">*/}\r\n                            {/*    <h3>pizza delivery</h3>*/}\r\n                            {/*    <p>*/}\r\n                            {/*    </p>*/}\r\n\r\n                            {/*</div>*/}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <ul className=\"list-group\">\r\n                {\r\n                    currentUserOrderHistory.map(item => {\r\n                        return(\r\n                            <li className=\"list-group-item\" key={item.orderId}>\r\n                                <HistoryPageListItem historyData={item} />\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    static get propTypes() {\r\n        return {\r\n            fetchUserOrderHistory: PropTypes.func.isRequired,\r\n            currentUserOrderHistory: PropTypes.array,\r\n            loading: PropTypes.bool,\r\n            clientName: PropTypes.string\r\n        };\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ UserReducer: {clientName, loading, currentUserOrderHistory} }) => {\r\n    return { clientName, currentUserOrderHistory, loading };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { pizzaService }) => {\r\n    return bindActionCreators({\r\n        fetchUserOrderHistory: fetchUserOrderHistory(pizzaService)\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withPizzaDeliveryService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(HistoryList);\r\n","import React from 'react';\r\nimport HistoryList from '../history-list/history-list';\r\n\r\nconst HistoryPage = () => {\r\n    return <HistoryList/>\r\n};\r\n\r\nexport default HistoryPage;","import SignInError from \"./sign-in-error\";\r\n\r\nexport default SignInError;","import React from 'react';\r\nimport './sign-in-error.css';\r\n\r\nconst SignInError = ({errorHeader, errorBody, hide}) => {\r\n    return(\r\n        <div className={hide}>\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n               <p className=\"alert-link\">{errorHeader}</p>{errorBody}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SignInError;","import React, { Component } from 'react';\r\nimport './login-page.css';\r\nimport './registration-page.css';\r\nimport { connect } from 'react-redux';\r\nimport compose from '../../utils';\r\nimport withPizzaDeliveryService from \"../hoc/with-pizza-delivery-service\";\r\nimport { fetchLoginUserData } from '../../actions/user-actions';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\nimport {bindActionCreators} from \"redux\";\r\nimport SignInError from \"../sign-in-error\";\r\n\r\nclass LoginPage extends Component {\r\n\r\n    state = {\r\n        clientName: '',\r\n        password: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.clientName === '' || this.state.password === '') {\r\n            e.preventDefault();\r\n            return this.dialog.show({\r\n                title: 'Empty fields',\r\n                body: 'Enter nickname and password',\r\n                bsSize: 'large',\r\n                actions: [\r\n                    Dialog.OKAction()\r\n                ]\r\n            })\r\n        } else {\r\n            console.log(this.props.signinErrors);\r\n            this.props.fetchUserData(this.state.clientName, this.state.password);\r\n        }\r\n    };\r\n\r\n    handlePassword = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    };\r\n\r\n    handleUsername = (e) => {\r\n        this.setState({ clientName: e.target.value });\r\n    };\r\n\r\n    render() {\r\n\r\n        if (window.localStorage.getItem('token')) {\r\n            return <Redirect to=\"/\" exact/>;\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <form className=\"reg-page__form login-page__desktop\">\r\n                { this.props.signinErrors.length !== 0 ? <SignInError errorBody=\"Incorrect username or password\" errorHeader=\"Error\" /> : null }\r\n                <h3>Login below</h3>\r\n                <label className=\"reg-page__label\">\r\n                    <p className=\"label-txt\">ENTER YOUR NAME</p>\r\n                    <input type=\"text\"\r\n                           className=\"input\"\r\n                           onChange={(e) => this.handleUsername(e)}\r\n                           value={this.state.clientName}/>\r\n                    <div className=\"line-box\">\r\n                        <div className=\"line\"></div>\r\n                    </div>\r\n                </label>\r\n                <label className=\"reg-page__label\">\r\n                    <p className=\"label-txt\">ENTER YOUR PASSWORD</p>\r\n                    <input type=\"password\"\r\n                           className=\"input\"\r\n                           value={this.state.password}\r\n                           onChange={(e) => this.handlePassword(e)}/>\r\n                    <div className=\"line-box\">\r\n                        <div className=\"line\"></div>\r\n                    </div>\r\n                </label>\r\n                <button className=\"reg-page__button\" onClick={this.handleSubmit}>submit</button>\r\n                <Dialog ref={(component) => { this.dialog = component }} />\r\n            </form>\r\n\r\n                <form className=\"login-page__mobile\">\r\n                    { this.props.signinErrors.length !== 0 ? <SignInError errorBody=\"Incorrect username or password\" errorHeader=\"Error\" /> : null }\r\n                    <h3>Log in below</h3>\r\n                    <div className=\"form-group-row\">\r\n                        <label htmlFor=\"email_address\" className=\"col-md-4 col-form-label text-md-right\">\r\n                            Username\r\n                        </label>\r\n                        <div className=\"col-md-6\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"email_address\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => this.handleUsername(e)}\r\n                                value={this.state.clientName}\r\n                                name=\"email-address\" required/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group-row\">\r\n                        <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">\r\n                            Password\r\n                        </label>\r\n                        <div className=\"col-md-6\">\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => this.handlePassword(e)}\r\n                                value={this.state.password}\r\n                                name=\"password\" required/>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" onClick={this.handleSubmit} className=\"btn submit-button__mobile btn-primary\">Log in</button>\r\n                </form>\r\n\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = ({ UserReducer: {signinErrors, clientName, isAuthenticated}, MenuReducer: {loading}}) => {\r\n    return { clientName, signinErrors, isAuthenticated, loading };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { pizzaService }) => {\r\n    return bindActionCreators({\r\n        fetchUserData: fetchLoginUserData(pizzaService)\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withPizzaDeliveryService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(LoginPage);\r\n","import RegistrationSuccess from \"./registration-success\";\r\n\r\nexport default RegistrationSuccess;","import React from 'react';\r\nimport './registration-success.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst RegistrationSuccess = () => {\r\n    return(\r\n        <div className=\"alert alert-success\" role=\"alert\">\r\n            Registration success! Now you can <Link to='/login'>LOGIN</Link>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistrationSuccess;","import React, { Component } from 'react';\r\nimport './registration-page.css';\r\nimport {fetchRegistrationUserData} from \"../../actions/user-actions\";\r\nimport { connect } from 'react-redux';\r\nimport withPizzaDeliveryService from \"../hoc/with-pizza-delivery-service\";\r\nimport compose from \"../../utils\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport Dialog from 'react-bootstrap-dialog';\r\nimport {bindActionCreators} from \"redux\";\r\nimport SignInError from \"../sign-in-error\";\r\nimport RegistrationSuccess from \"../registration-success\";\r\n\r\nclass RegistrationPage extends Component {\r\n\r\n    state = {\r\n        clientName: '',\r\n        password: ''\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.clientName === '' || this.state.password === '') {\r\n\r\n            return this.dialog.show({\r\n                title: 'Empty fields',\r\n                body: 'Enter nickname and password',\r\n                bsSize: 'large',\r\n                actions: [\r\n                    Dialog.OKAction()\r\n                ]\r\n            })\r\n        } else {\r\n            this.props.fetchRegistrationUserData(this.state.clientName, this.state.password);\r\n        }\r\n    };\r\n\r\n    render() {\r\n\r\n        const { isAuthenticated } = this.props;\r\n\r\n        if (isAuthenticated) {\r\n            return <Redirect to='/login' />;\r\n        }\r\n\r\n        console.log(this.props.signupErrors);\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <form className=\"reg-page__form registration-page__desktop\">\r\n                { this.props.signupErrors.length !== 0 ? <SignInError errorBody=\"Username already exist\" errorHeader=\"Error\" /> : null }\r\n                { this.props.signUpSuccess ? <RegistrationSuccess/> : null }\r\n                <h3>Registration below</h3>\r\n                <label className=\"reg-page__label\">\r\n                    <p className=\"label-txt\">ENTER YOUR NAME</p>\r\n                    <input type=\"text\"\r\n                           className=\"input\"\r\n                           onChange={(e) => this.setState({ clientName: e.target.value })}/>\r\n                        <div className=\"line-box\">\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                </label>\r\n                <label className=\"reg-page__label\">\r\n                    <p className=\"label-txt\">ENTER YOUR PASSWORD</p>\r\n                    <input type=\"password\"\r\n                           onChange={(e) => this.setState({ password: e.target.value })}\r\n                           className=\"input\"/>\r\n                        <div className=\"line-box\">\r\n                            <div className=\"line\"></div>\r\n                        </div>\r\n                </label>\r\n                <button type=\"submit\" onClick={this.handleSubmit} className=\"reg-page__button\">submit</button>\r\n                <Dialog ref={(component) => { this.dialog = component }} />\r\n            </form>\r\n\r\n                <form className=\"registration-page__mobile\">\r\n                    <h3 className=\"registration-page__mobile_title\">Registration below</h3>\r\n                    { this.props.signupErrors.length !== 0 ? <SignInError errorBody=\"Username already exist\" errorHeader=\"Error\" /> : null }\r\n                    { this.props.signUpSuccess ? <RegistrationSuccess/> : null }\r\n                    <div className=\"form-group-row\">\r\n                        <label htmlFor=\"email_address\" className=\"col-md-4 col-form-label text-md-right\">\r\n                            Username\r\n                        </label>\r\n                        <div className=\"col-md-6\">\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"email_address\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => this.setState({ clientName: e.target.value })}\r\n                                value={this.state.clientName}\r\n                                name=\"email-address\" required/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group-row\">\r\n                        <label htmlFor=\"password\" className=\"col-md-4 col-form-label text-md-right\">\r\n                            Password\r\n                        </label>\r\n                        <div className=\"col-md-6\">\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                className=\"form-control\"\r\n                                onChange={(e) => this.setState({ password: e.target.value })}\r\n                                value={this.state.password}\r\n                                name=\"password\" required/>\r\n                        </div>\r\n                    </div>\r\n                    <button type=\"button\" onClick={this.handleSubmit} className=\"btn submit-button__mobile btn-primary\">Submit</button>\r\n                </form>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nconst mapStateToProps = ({ UserReducer: {clientName, signupErrors, signUpSuccess }}) => {\r\n    return { clientName, signupErrors, signUpSuccess };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { pizzaService }) => {\r\n    return bindActionCreators({\r\n        fetchRegistrationUserData: fetchRegistrationUserData(pizzaService)\r\n    }, dispatch);\r\n};\r\n\r\nexport default compose(\r\n    withPizzaDeliveryService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(RegistrationPage);\r\n","import AppFooter from \"./app-footer\";\r\n\r\nexport default AppFooter;","import React from 'react';\r\nimport './app-footer.css';\r\n\r\nconst AppFooter = () => {\r\n    return(\r\n        <footer className=\"page-footer font-small blue\">\r\n\r\n            <div className=\"footer-copyright text-center py-3\">© 2019 @nemisqe:\r\n                <br/>\r\n                <a href=\"https://github.com/nemisqe\" className=\"git-link\">Github</a>\r\n            </div>\r\n\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default AppFooter;\r\n","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport AppHeader from \"../app-header/app-header\";\r\nimport HomePage from '../pages/home-page';\r\nimport HistoryPage from '../pages/history-page';\r\nimport LoginPage from '../../components/pages/login-page';\r\nimport RegistrationPage from '../../components/pages/registration-page';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport AppFooter from \"../app-footer\";\r\nimport './app.css';\r\n\r\nconst App = ({ isAuthenticated }) => {\r\n    return (\r\n        <React.Fragment>\r\n        <AppHeader/>\r\n            <Route path='/history' render={() => (isAuthenticated ? (\r\n                    <Route\r\n                        path=\"/history\"\r\n                        component={HistoryPage}\r\n                    />\r\n                ) : (\r\n                    <Redirect to=\"/login\" />)\r\n            )} />\r\n        <main role=\"main\" className=\"container\">\r\n            <Switch>\r\n                <Route\r\n                    path=\"/\"\r\n                    component={HomePage}\r\n                    exact\r\n                />\r\n                <Route path='/registration' exact component={ RegistrationPage } />\r\n                <Route path='/login' exact component={LoginPage} />\r\n                <Route path='/logout' exact render={() => (isAuthenticated ? (\r\n                        <Route\r\n                            path=\"/\"\r\n                            component={HomePage}\r\n                            exact\r\n                        />\r\n                    ) : (\r\n                        <Redirect to=\"/login\" />)\r\n                )} />\r\n\r\n            </Switch>\r\n\r\n        </main>\r\n            <AppFooter/>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nApp.propTypes = {\r\n    isAuthenticated: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ UserReducer: { isAuthenticated } }) => {\r\n    return { isAuthenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","const initialState = {\r\n    pizzaMenu: [],\r\n    loading: true,\r\n    menuErrors: []\r\n};\r\n\r\nconst MenuReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_MENU_REQUEST':\r\n            return {\r\n                ...state,\r\n                menuErrors: [],\r\n                loading: true,\r\n                pizzaMenu: []\r\n            };\r\n        case 'FETCH_MENU_SUCCESS':\r\n            return {\r\n                ...state,\r\n                menuErrors: [],\r\n                pizzaMenu: action.payload,\r\n                loading: false,\r\n\r\n            };\r\n        case 'FETCH_MENU_FAILURE':\r\n            return {\r\n                ...state,\r\n                pizzaMenu: [],\r\n                loading: false,\r\n                menuErrors: action.payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default MenuReducer;\r\n","const initialState = {\r\n    cartItems: [],\r\n    currentOrder: [],\r\n    orderTotal: 0,\r\n    pizzaMenu: []\r\n};\r\n\r\nconst updateCartItems = (cartItems, item, idx) => {\r\n\r\n    if (idx === -1) {\r\n        return [\r\n            ...cartItems,\r\n            item\r\n        ];\r\n    }\r\n\r\n    if (item.count === 0) {\r\n        return [\r\n            ...cartItems.slice(0, idx),\r\n\r\n            ...cartItems.slice(idx + 1)\r\n        ];\r\n    }\r\n\r\n    return [\r\n        ...cartItems.slice(0, idx),\r\n        item,\r\n        ...cartItems.slice(idx + 1)\r\n    ];\r\n};\r\n\r\nconst updateTotalCookingTime = (pizza, orderTotal, quantity) => orderTotal + quantity * pizza.cooking_time;\r\n\r\nconst updateOrder = (state, pizzaId, quantity) => {\r\n    const { cartItems, orderTotal, pizzaMenu } = state;\r\n\r\n    const pizza = pizzaMenu.find(({id}) => id === pizzaId);\r\n\r\n    const itemIndex = cartItems.findIndex(({id}) => id === pizzaId);\r\n\r\n    const item = cartItems[itemIndex];\r\n\r\n    const newItem = updateCartItem(pizza, item, quantity);\r\n\r\n    return {\r\n        ...state,\r\n        cartItems: updateCartItems(cartItems, newItem, itemIndex),\r\n        orderTotal: updateTotalCookingTime(pizza, orderTotal, quantity)\r\n    };\r\n};\r\n\r\nconst updateCartItem = (pizza, item = {}, quantity) => {\r\n\r\n    const { id = pizza.id,\r\n        count = 0,\r\n        name = pizza.pizza_name,\r\n        totalCookingTime = 0 } = item;\r\n\r\n    return {\r\n        id,\r\n        name,\r\n        count: count + quantity,\r\n        totalCookingTime: totalCookingTime + quantity * pizza.cooking_time\r\n    };\r\n};\r\n\r\nconst CartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_MENU_REQUEST':\r\n            return {\r\n                ...state,\r\n                pizzaMenu: []\r\n            };\r\n        case 'FETCH_MENU_SUCCESS':\r\n            return {\r\n                ...state,\r\n                pizzaMenu: action.payload\r\n            };\r\n        case 'FETCH_MENU_FAILURE':\r\n            return {\r\n                ...state,\r\n                pizzaMenu: [],\r\n                loading: false,\r\n                menuErrors: action.payload\r\n            };\r\n        case 'PIZZA_ADDED_TO_CART':\r\n            return updateOrder(state, action.payload, 1);\r\n\r\n        case 'PIZZA_REMOVED_FROM_CART':\r\n            return updateOrder(state, action.payload, -1);\r\n\r\n        case 'ALL_PIZZAS_REMOVED_FROM_CART':\r\n            const item = state.cartItems.find(({id}) => id === action.payload);\r\n            return updateOrder(state, action.payload, -item.count);\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default CartReducer;\r\n","const initialState = {\r\n    clientName: '',\r\n    isAuthenticated: false,\r\n    signinErrors: [],\r\n    currentUserOrderHistory: [],\r\n    signUpSuccess: false,\r\n    signupErrors: [],\r\n    loading: false\r\n};\r\n\r\nconst checkAuth = (state) => {\r\n    const lsName = window.localStorage.getItem('clientName');\r\n    const lsToken = window.localStorage.getItem('token');\r\n    if (lsToken) {\r\n        return {\r\n            ...state.userData,\r\n            clientName: lsName,\r\n            isAuthenticated: true,\r\n            currentUserOrderHistory: []\r\n        }\r\n    }\r\n    return state;\r\n};\r\n\r\nconst UserReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'GET_USER_ORDER_HISTORY':\r\n            return {\r\n                ...state,\r\n                currentUserOrderHistory: action.payload,\r\n                isAuthenticated: true,\r\n                loading: false\r\n            };\r\n        case 'FETCH_USER_DATA_SUCCESS':\r\n            return {\r\n                ...state,\r\n                userData: action.payload.data,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                currentUserOrderHistory: []\r\n            };\r\n\r\n        case 'POST_LOGIN_SUCCESS':\r\n            localStorage.setItem('clientName', action.payload[0]);\r\n            localStorage.setItem('token', action.payload[2]);\r\n            return {\r\n                ...state,\r\n                clientName: action.payload[0],\r\n                loading: false,\r\n                signinErrors: [],\r\n                isAuthenticated: true,\r\n                currentUserOrderHistory: []\r\n            };\r\n\r\n        case 'USER_LOGOUT':\r\n            window.localStorage.removeItem('clientName');\r\n            window.localStorage.removeItem('token');\r\n            return {\r\n                ...state,\r\n                clientName: '',\r\n                isAuthenticated: false,\r\n                signinErrors: [],\r\n                signupErrors: [],\r\n                currentUserOrderHistory: []\r\n            };\r\n\r\n        case 'CHECK_USER_FOR_AUTH':\r\n            return checkAuth(state);\r\n\r\n        case 'USER_REGISTRATION_SUCCESS':\r\n            return {\r\n                ...state,\r\n                clientName: action.payload[0],\r\n                signUpSuccess: true,\r\n                isAuthenticated: false,\r\n                signupErrors: []\r\n            };\r\n\r\n        case 'LOGIN_DATA_REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                currentUserOrderHistory: [],\r\n                isAuthenticated: false,\r\n            };\r\n\r\n        case 'MAKE_ORDER_SUCCESS':\r\n            return {\r\n                ...state,\r\n                currentOrder: action.payload,\r\n            };\r\n\r\n        case 'FETCH_USER_DATA_FAILURE':\r\n            return {\r\n                ...state,\r\n                userData: [],\r\n                loading: false,\r\n                signupErrors: action.payload,\r\n                isAuthenticated: false,\r\n            };\r\n\r\n        case 'USER_HISTORY_REQUESTED':\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                currentUserOrderHistory: []\r\n            };\r\n\r\n        case 'USER_ALREADY_REGISTERED':\r\n            return {\r\n                ...state,\r\n                signupErrors: action.payload,\r\n                signUpSuccess: false,\r\n                isAuthenticated: false,\r\n                currentUserOrderHistory: []\r\n            };\r\n\r\n        case '409_STATUS_CODE':\r\n            return {\r\n                ...state,\r\n                signupErrors: action.payload,\r\n                signUpSuccess: false\r\n            };\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default UserReducer;\r\n","import MenuReducer from \"./menu-reducer\";\r\nimport CartReducer from \"./cart-reducer\";\r\nimport UserReducer from \"./user-reducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nexport default combineReducers({\r\n    MenuReducer,\r\n    CartReducer,\r\n    UserReducer\r\n});","import reducer from './reducers';\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import ErrorIndicator from './error-indicator';\r\n\r\nexport default ErrorIndicator;","import ErrorBoundry from './error-boundry';\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch(error) {\r\n        this.setState({\r\n            hasError: true\r\n        });\r\n    };\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <ErrorIndicator/>\r\n        }\r\n\r\n        return this.props.children;\r\n    };\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app';\r\nimport store from './store';\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport {Provider} from \"react-redux\";\r\nimport PizzaService from './services/pizza-delivery-service';\r\nimport {PizzaServiceProvider} from \"./components/pizza-delivery-service-context\";\r\n\r\nconst pizzaService = new PizzaService();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <ErrorBoundry>\r\n            <PizzaServiceProvider value={pizzaService}>\r\n                <Router>\r\n                    <App/>\r\n                </Router>\r\n            </PizzaServiceProvider>\r\n        </ErrorBoundry>\r\n    </Provider>\r\n    ,document.getElementById('root'));","import axios from 'axios';\r\n\r\nexport default class PizzaService {\r\n    _basicUrl = 'http://localhost:3001/';\r\n\r\n    getAllPizzas = async () => {\r\n        return await axios.get(`${this._basicUrl}menu/`)\r\n            .then(res => res.data);\r\n    };\r\n\r\n    loginUser = async (username, password) => {\r\n        return await axios.post(`${this._basicUrl}authentication/`, {\r\n            \"clientName\": username,\r\n            \"password\": password\r\n        })\r\n            .then(res => {\r\n                return res;\r\n            })\r\n            .catch(error => {\r\n                return error.response.status;\r\n            });\r\n    };\r\n\r\n    registerUser = async (username, password) => {\r\n        return await axios.post(`${this._basicUrl}clients/add/`, {\r\n            \"clientName\": username,\r\n            \"password\": password\r\n        })\r\n            .then(res => {\r\n                return res.data;\r\n            })\r\n            .catch(error => {\r\n                console.error(error);\r\n            });\r\n    };\r\n\r\n    makeOrder = async (clientName, isReady, cooking_time) => {\r\n        return await axios.post(`${this._basicUrl}menu/add/`, {\r\n            \"clientName\": clientName,\r\n            \"isReady\": isReady,\r\n            \"cooking_time\": cooking_time\r\n        })\r\n            .then(res => {\r\n                if (res.data.cooking_time === 0) {\r\n                    return;\r\n                }\r\n                return res.data;\r\n            })\r\n            .catch(error => console.error(error))\r\n    };\r\n\r\n    getUserOrderHistory = async (clientName) => {\r\n        return await axios.get(`${this._basicUrl}history/${clientName}/`)\r\n            .then(res => res.data)\r\n            .catch(error => console.error(error));\r\n    };\r\n}"],"sourceRoot":""}